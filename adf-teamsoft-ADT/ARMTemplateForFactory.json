{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-teamsoft-ADT"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"accountKey\"de \"LS_ADLS\""
		},
		"LS_ASQL_AdvertureWorks_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LS_ASQL_AdvertureWorks\""
		},
		"LS_ASQL_Integracion_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LS_ASQL_Integracion\""
		},
		"LS_ASQL_Tailspin_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"LS_ASQL_Tailspin\""
		},
		"LS_S3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"secretAccessKey\"de \"LS_S3\""
		},
		"LS_SQL_AW_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"LS_SQL_AW\""
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dblacademyadls.dfs.core.windows.net/"
		},
		"LS_ASQL_Tailspin_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "academy-sqlsrv.database.windows.net"
		},
		"LS_ASQL_Tailspin_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Tailspin"
		},
		"LS_ASQL_Tailspin_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "usr_asql_integracion"
		},
		"LS_S3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAWHQSER2DT3HU3OO6"
		},
		"LS_SQL_AW_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DBLEARNER-03\\SQL150DEV"
		},
		"LS_SQL_AW_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks"
		},
		"LS_SQL_AW_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "usr_integracion_adf"
		},
		"SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "sqlsrv-dblearner-asql.database.windows.net"
		},
		"SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "dbl-admin"
		},
		"SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_AW_ASQL_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_ObtenerTablasIngesta",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT \n  NombreEsquema, \n  NombreTabla\nFROM intg.TablasIngesta\nWHERE Grupo = ''', pipeline().parameters.Grupo,\n''' AND Estado = 1')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_Integracion_TablaIngesta",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_CopiarTablasIngesta",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_ObtenerTablasIngesta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_ObtenerTablasIngesta').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CD_DATA_ASQL_to_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', item().NombreEsquema, '.', item().NombreTabla)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "LS_ADLS",
													"type": "LinkedServiceReference"
												}
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASQL_AdventureWorks_Data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_AW_Data",
											"type": "DatasetReference",
											"parameters": {
												"Ruta": {
													"value": "@concat(item().NombreEsquema, '\\', item().NombreTabla)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Grupo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Módulo 05"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-28T15:43:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_Integracion_TablaIngesta')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_AdventureWorks_Data')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_AW_Data')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_CopiaArchivos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copia datos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_S3_Movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DF_TRAN_Movies",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copia datos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_TRAN_Movies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesADLS": {},
									"DestinoMoviesADLS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Espera01",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "DF_TRAN_Movies",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 01"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T01:14:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_S3_Movies')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Movies')]",
				"[concat(variables('factoryId'), '/dataflows/DF_TRAN_Movies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ORQ_Ingesta_AW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ventas Mst",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AW_ASQL_to_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Venta-Mst"
							}
						}
					},
					{
						"name": "Ventas Trn",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Ventas Mst",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AW_ASQL_to_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Venta-Trn"
							}
						}
					},
					{
						"name": "Execute Pipeline3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AW_ASQL_to_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Compa-Mst"
							}
						}
					},
					{
						"name": "Execute Pipeline4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AW_ASQL_to_ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Compra-Trn"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 05"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-28T15:43:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_AW_ASQL_to_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_Tran_UpdateCustomerDimension",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_TRAN_UpdateCustomerDimension",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceDB": {},
									"DimCustomer": {},
									"SinkDimCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"NumeroDeLista": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "Módulo 04"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T01:14:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_TRAN_UpdateCustomerDimension')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_mstDepartamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PQ_TRAN_Departamento_Zona",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PQ_TRAN_Departamento_Zona",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DS_ADLS_Departamento": {
										"NombreHoja": "Departamento"
									},
									"DS_ADLS_Zona": {},
									"UserQueryDSADLSmstDepartamento": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryDSADLSmstDepartamento",
											"dataset": {
												"referenceName": "DS_ADLS_mstDepartamento",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryDSADLSmstDepartamento"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 03"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T01:14:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PQ_TRAN_Departamento_Zona')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_mstDepartamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_AW_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Ruta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Módulo 05"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Ruta",
							"type": "Expression"
						},
						"fileSystem": "bronce00"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Departamento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"NombreHoja": {
						"type": "string",
						"defaultValue": "Departamento"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Departamento",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Maestros.xlsx",
						"fileSystem": "archivosfuente"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "DepartamentoID",
						"type": "String"
					},
					{
						"name": "CodigoDepartamento",
						"type": "String"
					},
					{
						"name": "DepartamentoPais",
						"type": "String"
					},
					{
						"name": "Departamento",
						"type": "String"
					},
					{
						"name": "Pais",
						"type": "String"
					},
					{
						"name": "ZonaID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 01"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MoviesADT.csv",
						"fileSystem": "bronce"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "RottenTomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_ResumenMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 03"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "plata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Zona')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Zona",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Maestros.xlsx",
						"fileSystem": "archivosfuente"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ZonaID",
						"type": "String"
					},
					{
						"name": "Zona",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_mstDepartamento')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ADT",
						"fileSystem": "plata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_AdventureWorks_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_AdvertureWorks",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 05"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_AdvertureWorks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Integracion_TablaIngesta')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Integracion",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 05"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IdTabla",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Grupo",
						"type": "varchar"
					},
					{
						"name": "NombreEsquema",
						"type": "varchar"
					},
					{
						"name": "NombreTabla",
						"type": "varchar"
					},
					{
						"name": "Estado",
						"type": "bit"
					},
					{
						"name": "UsuarioCreacion",
						"type": "varchar"
					},
					{
						"name": "FechaCreacion",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "intg",
					"table": "TablasIngesta"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_Integracion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Tailspin_CustomerSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Tailspin",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 04"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerSource"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_Tailspin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Tailspin_DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Tailspin",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 04"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "HashKey",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_Tailspin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL_Tailspin_Products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL_Tailspin",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 01"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductSubcategoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ModelName",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL_Tailspin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_S3_Movies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_S3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 01"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "japerlov-test",
						"folderPath": "stg-data",
						"fileName": "moviesDB.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "RottenTomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_S3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Person_Person')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_AW",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Módulo 02"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonType",
						"type": "nchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "EmailPromotion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdditionalContactInfo",
						"type": "xml"
					},
					{
						"name": "Demographics",
						"type": "xml"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Person",
					"table": "Person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_AW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_AdvertureWorks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_AdvertureWorks_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_Integracion')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_Integracion_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL_Tailspin')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_ASQL_Tailspin_properties_typeProperties_server')]",
					"database": "[parameters('LS_ASQL_Tailspin_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_ASQL_Tailspin_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ASQL_Tailspin_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_S3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('LS_S3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('LS_S3_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_AW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"NomUsuario": {
						"type": "string",
						"defaultValue": "usr_asql_integracion"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LS_SQL_AW_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_AW_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_AW_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_AW_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHintegrationRuntime01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHintegrationRuntime01')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHintegrationRuntime01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSISintegrationRuntime01')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Brazil South",
						"nodeSize": "Standard_D1_v2",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('SSISintegrationRuntime01_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_TRAN_Movies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_Movies",
								"type": "DatasetReference"
							},
							"name": "MoviesADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_ResumenMovies",
								"type": "DatasetReference"
							},
							"name": "DestinoMoviesADLS"
						}
					],
					"transformations": [
						{
							"name": "SelectMovies"
						},
						{
							"name": "MoviesDespues1950"
						},
						{
							"name": "GeneroPrimario"
						},
						{
							"name": "RankingRatings"
						},
						{
							"name": "AgregarRatings"
						},
						{
							"name": "UpsertFilas"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          RottenTomato as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesADLS",
						"MoviesADLS select(mapColumn(",
						"          {Películas} = movie,",
						"          {Título} = title,",
						"          {Géneros} = genres,",
						"          {Año} = year,",
						"          Rating,",
						"          RottenTomatoes = RottenTomato",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectMovies",
						"SelectMovies filter(isInteger({Año})) ~> MoviesDespues1950",
						"MoviesDespues1950 derive({GéneroPrimario} = iif(locate('|', {Géneros})>1, left({Géneros}, locate('|', {Géneros})-1), {Géneros})) ~> GeneroPrimario",
						"GeneroPrimario window(over({GéneroPrimario},",
						"          {Año}),",
						"     desc(RottenTomatoes, true),",
						"     RankingRatings = rank()) ~> RankingRatings",
						"RankingRatings aggregate(groupBy({GéneroPrimario},",
						"          {Año}),",
						"     RottenTomatoes = avg(toInteger(RottenTomatoes)),",
						"          MejorRating = first({Título}),",
						"          PeorRating = last({Título}),",
						"          {NroPelículas} = count()) ~> AgregarRatings",
						"AgregarRatings alterRow(upsertIf(true())) ~> UpsertFilas",
						"UpsertFilas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['ResumenMoviesABC.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DestinoMoviesADLS"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Movies')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_ResumenMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_TRAN_UpdateCustomerDimension')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Módulo 04"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ASQL_Tailspin_CustomerSource",
								"type": "DatasetReference"
							},
							"name": "SourceDB"
						},
						{
							"dataset": {
								"referenceName": "DS_ASQL_Tailspin_DimCustomer",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ASQL_Tailspin_DimCustomer",
								"type": "DatasetReference"
							},
							"name": "SinkDimCustomer"
						}
					],
					"transformations": [
						{
							"name": "CreateCustomerHash"
						},
						{
							"name": "ExistsHash"
						},
						{
							"name": "LookupCustomerID"
						},
						{
							"name": "SetDates"
						},
						{
							"name": "AllowUpserts"
						}
					],
					"scriptLines": [
						"parameters{",
						"     FlagModifica as boolean (true())",
						"}",
						"source(output(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDB",
						"source(output(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          InsertedDate as timestamp,",
						"          ModifiedDate as timestamp,",
						"          HashKey as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimCustomer",
						"SourceDB derive(HashKey = sha2(256, iifNull(Title,'') +FirstName +iifNull(MiddleName,'') +LastName +iifNull(Suffix,'') +iifNull(CompanyName,'') +iifNull(SalesPerson,'') +iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> CreateCustomerHash",
						"CreateCustomerHash, DimCustomer exists(CreateCustomerHash@HashKey == DimCustomer@HashKey,",
						"     negate:true,",
						"     broadcast: 'auto')~> ExistsHash",
						"ExistsHash, DimCustomer lookup(SourceDB@CustomerID == DimCustomer@CustomerID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCustomerID",
						"LookupCustomerID derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),",
						"          ModifiedDate = currentTimestamp()) ~> SetDates",
						"SetDates alterRow(upsertIf(true())) ~> AllowUpserts",
						"AllowUpserts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          InsertedDate as timestamp,",
						"          ModifiedDate as timestamp,",
						"          HashKey as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CustomerID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID = SourceDB@CustomerID,",
						"          Title = SourceDB@Title,",
						"          FirstName = SourceDB@FirstName,",
						"          MiddleName = SourceDB@MiddleName,",
						"          LastName = SourceDB@LastName,",
						"          Suffix = SourceDB@Suffix,",
						"          CompanyName = SourceDB@CompanyName,",
						"          SalesPerson = SourceDB@SalesPerson,",
						"          EmailAddress = SourceDB@EmailAddress,",
						"          Phone = SourceDB@Phone,",
						"          InsertedDate,",
						"          ModifiedDate,",
						"          HashKey = CreateCustomerHash@HashKey",
						"     )) ~> SinkDimCustomer"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_Tailspin_CustomerSource')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL_Tailspin_DimCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PQ_TRAN_Departamento_Zona')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DS_ADLS_Departamento",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_ADLS_Departamento",
							"dataset": {
								"referenceName": "DS_ADLS_Departamento",
								"type": "DatasetReference"
							}
						},
						{
							"name": "DS_ADLS_Zona",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_ADLS_Zona",
							"dataset": {
								"referenceName": "DS_ADLS_Zona",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DS_ADLS_Departamento = let AdfDoc = AzureStorage.DataLakeContents(\"https://dblacademyadls.dfs.core.windows.net/archivosfuente/Maestros.xlsx\"), Excel = Excel.Workbook(AdfDoc),ExcelSheet = Excel{[Item=\"Departamento\",Kind=\"Sheet\"]}[Data], PromotedHeaders = Table.PromoteHeaders(ExcelSheet, [PromoteAllScalars = true]) in PromotedHeaders;\r\nshared DS_ADLS_Zona = let AdfDoc = AzureStorage.DataLakeContents(\"https://dblacademyadls.dfs.core.windows.net/archivosfuente/Maestros.xlsx\"), Excel = Excel.Workbook(AdfDoc),ExcelSheet = Excel{[Item=\"Zona\",Kind=\"Sheet\"]}[Data], PromotedHeaders = Table.PromoteHeaders(ExcelSheet, [PromoteAllScalars = true]) in PromotedHeaders;\r\nshared UserQuery = let Source = #\"DS_ADLS_Departamento\",\r\n  #\"Columnas quitadas\" = Table.RemoveColumns(Source, {\"CodigoDepartamento\", \"DepartamentoPais\"}),\r\n  #\"Consultas combinadas\" = Table.NestedJoin(#\"Columnas quitadas\", {\"ZonaID\"}, DS_ADLS_Zona, {\"ZonaID\"}, \"DS_ADLS_Zona\", JoinKind.LeftOuter),\r\n  #\"DS_ADLS_Zona expandido\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"DS_ADLS_Zona\", {\"Zona\"}, {\"Zona\"}) in #\"DS_ADLS_Zona expandido\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Departamento')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Zona')]"
			]
		}
	]
}